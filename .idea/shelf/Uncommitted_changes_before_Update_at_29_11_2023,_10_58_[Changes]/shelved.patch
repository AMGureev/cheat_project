Index: src/main/kotlin/com/example/cheat_project/HelloController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cheat_project\n\nimport javafx.fxml.FXML\nimport javafx.fxml.FXMLLoader\nimport javafx.scene.Scene\nimport javafx.scene.control.Button\nimport javafx.scene.control.ChoiceBox\nimport javafx.scene.control.Label\nimport javafx.scene.control.TextField\nimport javafx.stage.Stage\nimport java.awt.Rectangle\nimport java.awt.Robot\nimport java.awt.Toolkit\nimport java.io.File\nimport javax.imageio.ImageIO\nimport java.time.LocalTime\nimport java.time.format.DateTimeFormatter\n\nclass HelloController {\n    lateinit var toMenu2: Button\n    lateinit var connectButton: Button\n    lateinit var getCode: TextField\n    lateinit var back: Button\n    lateinit var codeInsertButton: Button\n    lateinit var codeGenButton: Button\n    @FXML\n    private lateinit var codeInsertText: TextField\n    @FXML\n    private lateinit var codeGenText: TextField\n    @FXML\n    private lateinit var welcomeText: Label\n    @FXML\n    private lateinit var nextButton: Button\n    @FXML\n    private lateinit var choiceBox: ChoiceBox<String>\n\n    private lateinit var code: String\n\n    @FXML\n    private fun onHelloButtonClick() {\n        nextButton.scene.window.hide()\n        val fxmlLoader : FXMLLoader\n        if (choiceBox.value == \"Отправитель\") {\n            fxmlLoader = FXMLLoader(HelloApplication::class.java.getResource(\"generate-code.fxml\"))\n        } else {\n            fxmlLoader = FXMLLoader(HelloApplication::class.java.getResource(\"input-code.fxml\"))\n        }\n        var scene = Scene(fxmlLoader.load(), 800.0, 600.0)\n        var stage = Stage()\n        stage.scene = scene\n        stage.show()\n    }\n\n    @FXML\n    private fun choiceBoxClick() {\n        nextButton.isDisable = false;\n    }\n\n    @FXML\n    private fun goBack() {\n        back.scene.window.hide()\n        val fxmlLoader = FXMLLoader(HelloApplication::class.java.getResource(\"hello-view.fxml\"))\n        val loader = fxmlLoader.getController<RecieverController>()\n        code = getCode.text\n        val scene = Scene(fxmlLoader.load(), 800.0, 600.0)\n        val stage = Stage()\n        stage.scene = scene\n        stage.show()\n    }\n\n    @FXML\n    private fun goToMenu() {\n        toMenu2.scene.window.hide()\n        val fxmlLoader = FXMLLoader(HelloApplication::class.java.getResource(\"hello-view.fxml\"))\n        val scene = Scene(fxmlLoader.load(), 800.0, 600.0)\n        val stage = Stage()\n        stage.scene = scene\n        stage.show()\n    }\n\n    @FXML\n    private fun generateCode() {\n        var code = \"\"\n        val allowedChars = ('A'..'Z') + ('a'..'z') + ('0'..'9')\n        code = (1..10).map { allowedChars.random() }.joinToString(\"\")\n        codeGenText.text = code;\n        val current = LocalTime.now().plusHours(6)\n        val formatted = DateTimeFormatter.ofPattern(\"HH:mm:ss\")\n        val timeNow = current.format(formatted)\n        val filename = \"databaseCode.txt\"\n        val finalString = \"$code $timeNow\"\n        println(finalString)\n        println(File(filename).exists())\n        File(filename).appendText(finalString)\n    }\n\n    @FXML\n    private fun inputCode() {\n        code = getCode.text\n        getCode.scene.window.hide()\n        val fxmlLoader = FXMLLoader(HelloApplication::class.java.getResource(\"getter-view.fxml\"))\n        val scene = Scene(fxmlLoader.load())\n        val stage = Stage()\n        stage.scene = scene\n        stage.setOnShown {\n            fxmlLoader.getController<RecieverController>().displayCode(code)\n        }\n        stage.show()\n    }\n    private fun screenShot() {\n        try {\n            val robot = Robot()\n            val screenSize = Toolkit.getDefaultToolkit().screenSize\n            val screenRect = Rectangle(screenSize)\n            val screenshot = robot.createScreenCapture(screenRect)\n            val outputFile = File(\"screenshot.png\")\n            ImageIO.write(screenshot, \"png\", outputFile)\n            println(\"Скриншот сохранен в: ${outputFile.absolutePath}\")\n        } catch (e: Exception) {\n            println(\"Ошибка при создании скриншота: ${e.message}\")\n        }\n    }\n\n    private fun checkCode(code: String): Boolean{\n        val timeNow = LocalTime.parse(LocalTime.now().toString(), DateTimeFormatter.ofPattern(\"H:m:ss\"))\n        val filename = File(\"com/example/cheat_project/databaseCode.txt\")\n        val bufferedReader = filename.bufferedReader()\n        val text:List<String> = bufferedReader.readLines()\n        for(line in text){\n            val keyAndTime = line.split(\" \").toTypedArray()\n            if (keyAndTime.elementAt(0) == code){\n                val endTime = LocalTime.parse(keyAndTime.elementAt(1), DateTimeFormatter.ofPattern(\"H:m:ss\"))\n                if (endTime >= timeNow){\n                    return true\n                }\n            }\n        }\n        return false\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/example/cheat_project/HelloController.kt b/src/main/kotlin/com/example/cheat_project/HelloController.kt
--- a/src/main/kotlin/com/example/cheat_project/HelloController.kt	(revision 6fc6799254d92d5d684ca4ddb02dc156dca76f17)
+++ b/src/main/kotlin/com/example/cheat_project/HelloController.kt	(date 1701212108154)
@@ -91,7 +91,7 @@
         val finalString = "$code $timeNow"
         println(finalString)
         println(File(filename).exists())
-        File(filename).appendText(finalString)
+        File(filename).writeText(finalString)
     }
 
     @FXML
Index: src/main/kotlin/com/example/cheat_project/databaseCode.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>hello
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/example/cheat_project/databaseCode.txt b/src/main/kotlin/com/example/cheat_project/databaseCode.txt
--- a/src/main/kotlin/com/example/cheat_project/databaseCode.txt	(revision 6fc6799254d92d5d684ca4ddb02dc156dca76f17)
+++ b/src/main/kotlin/com/example/cheat_project/databaseCode.txt	(date 1701212197989)
@@ -1,1 +1,0 @@
-hello
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"eb92854e-8255-42e3-b436-05d5e0f372f6\" name=\"Changes\" comment=\"edit fun generateCode() =&gt; append code and endTime in database file.\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/HelloController.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/HelloController.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/kotlin/databaseCode.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/databaseCode.txt\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"FxmlFile\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 8\n}</component>\n  <component name=\"ProjectId\" id=\"2Ym7Ov0w8S56oF6FFSxt8j1Y5iI\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/vladi/OneDrive/Рабочий стол/Utilities/SceneBuilder.exe&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"HelloApplicationKt\" type=\"JetRunConfigurationType\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.cheat_project.HelloApplicationKt\" />\n      <module name=\"cheat_project\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Kotlin.HelloApplicationKt\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"eb92854e-8255-42e3-b436-05d5e0f372f6\" name=\"Changes\" comment=\"\" />\n      <created>1701118872933</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1701118872933</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Add fun screenShot on HelloController.kt\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1701173412408</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1701173412408</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Add new fun() =&gt; checkCode(code: String): Boolean&#10;What function returned true if code in databaseCode and code's endtime is bigger than timeNow, else False.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1701204628842</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1701204628842</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"edit fun generateCode() =&gt; append code and endTime in database file.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1701205847940</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1701205847940</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Add fun screenShot on HelloController.kt\" />\n    <MESSAGE value=\"Add new fun() =&gt; checkCode(code: String): Boolean&#10;What function returned true if code in databaseCode and code's endtime is bigger than timeNow, else False.\" />\n    <MESSAGE value=\"edit fun generateCode() =&gt; append code and endTime in database file.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"edit fun generateCode() =&gt; append code and endTime in database file.\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"kotlin-line\">\n          <url>file://$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/HelloController.kt</url>\n          <line>93</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6fc6799254d92d5d684ca4ddb02dc156dca76f17)
+++ b/.idea/workspace.xml	(date 1701239129990)
@@ -4,10 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="eb92854e-8255-42e3-b436-05d5e0f372f6" name="Changes" comment="edit fun generateCode() =&gt; append code and endTime in database file.">
+    <list default="true" id="eb92854e-8255-42e3-b436-05d5e0f372f6" name="Changes" comment="edit fun generateCode()">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/HelloController.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/HelloController.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/kotlin/databaseCode.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/databaseCode.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/databaseCode.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/cheat_project/databaseCode.txt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -95,14 +95,23 @@
       <option name="project" value="LOCAL" />
       <updated>1701205847940</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="edit fun generateCode()">
+      <option name="closed" value="true" />
+      <created>1701208584602</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1701208584602</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Add fun screenShot on HelloController.kt" />
     <MESSAGE value="Add new fun() =&gt; checkCode(code: String): Boolean&#10;What function returned true if code in databaseCode and code's endtime is bigger than timeNow, else False." />
     <MESSAGE value="edit fun generateCode() =&gt; append code and endTime in database file." />
-    <option name="LAST_COMMIT_MESSAGE" value="edit fun generateCode() =&gt; append code and endTime in database file." />
+    <MESSAGE value="edit fun generateCode()" />
+    <option name="LAST_COMMIT_MESSAGE" value="edit fun generateCode()" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
